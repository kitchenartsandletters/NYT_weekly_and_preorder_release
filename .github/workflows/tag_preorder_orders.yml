name: Tag Preorder Orders

on:
  schedule:
    - cron: "0 * * * *" # Runs at the start of every hour
  workflow_dispatch: # Allow manual trigger from GitHub if needed

jobs:
  tag-preorder-orders:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system CA certificates
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates

      - name: Install dependencies and certificates
        run: |
          python -m pip install --upgrade pip
          pip install python-dotenv requests certifi

      - name: Export REQUESTS_CA_BUNDLE (backup for certifi)
        run: echo "REQUESTS_CA_BUNDLE=$(python -m certifi)" >> $GITHUB_ENV

      - name: Set SSL_CERT_FILE environment variable
        run: echo "SSL_CERT_FILE=$(python -m certifi)" >> $GITHUB_ENV

      - name: Debug certifi path
        run: |
          python -c "import certifi; print('certifi.where():', certifi.where())"

      - name: Debug OpenSSL and certifi path
        run: |
          python -c "import ssl; print('OpenSSL:', ssl.OPENSSL_VERSION)"
          python -c "import certifi; print('certifi.where():', certifi.where())"
          echo "REQUESTS_CA_BUNDLE=$REQUESTS_CA_BUNDLE"
          echo "SSL_CERT_FILE=$SSL_CERT_FILE"

      - name: Debug with curl to test Shopify Admin API SSL connectivity
        env:
          SHOP_URL: ${{ secrets.SHOP_URL }}
          SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
        run: |
          echo "Attempting curl request to Shopify Admin API..."
          curl -v -H "Content-Type: application/json" \
               -H "X-Shopify-Access-Token: $SHOPIFY_ACCESS_TOKEN" \
               "https://${SHOP_URL}/admin/api/2025-01/shop.json"

      - name: Run preorderOrderTagger.py
        env:
          SHOP_URL: ${{ secrets.SHOP_URL }}
          SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
          SSL_CERT_FILE: ${{ env.SSL_CERT_FILE }}
        run: |
          python preorderOrderTagger.py